// div[class^="layerContainer"] [role="menu"] {
//     // make menu items readable when hovered
//     --brand-experiment-560: var(--brand-experiment-25a);
//     --brand-experiment-600: var(--brand-experiment-400);

//     [class*="colorDefault"] {
//         &[class*="colorBrand"] {
//             color: $brand;
//         }

//         &[class*="focused"] {
//             &:not([class*="colorDanger"]),
//             [class*="checkbox-"] {
//                 color: var(--interactive-normal);
//             }
//         }

//         // make active items have dark text
//         &:active:not([class*="hideInteraction-"]) {
//             color: var(--background-floating);

//             [class*="check-"] {
//                 color: var(--interactive-normal);
//             }

//             [class*="checkbox-"] {
//                 color: var(--background-floating);
//             }
//         }
//     }

//     [class*="colorDanger"][class*="focused"],
//     [class*="colorDefault"] [class*="check-"] {
//         color: var(--background-floating);
//     }
// }

.theme-dark,
.theme-light {
    div[class^="layerContainer"]
        div[id^="popout_"]
        > div[class*="didRender-"]
        > div {
        background-color: var(--background-floating);

        div[class*="flowerStarContainer-"] {
            svg[class*="flowerStar-"] * {
                fill: $brand;
            }
        }
    }
}

div[class*="recentMentionsPopout"] {
    div[class^="header-"] {
        div[class^="controls-"] {
            --background-secondary: #{$surface0};
            --background-primary: #{adjust-color($surface0, $alpha: -0.1)};
        }
    }

    div[class^="scroller-"] {
        [role="button"] {
            --background-tertiary: #{adjust-color($subtext0, $alpha: -0.85)};
            --background-floating: #{adjust-color($subtext0, $alpha: -0.88)};
        }
    }
}

div[class*="rolesList"] {
    // make box lighter
    div[class^="role-"],
    button[class^="addButton-"] {
        background-color: lighten($mantle, 4%);
    }

    div[class^="role-"] {
        span[class^="roleCircle-"] {
            // default roles
            &[style*="background-color: rgb(185, 187, 190)"] {
                background-color: $subtext0 !important;
            }

            // base color roles
            &[style*="background-color: rgb(54, 57, 62)"],
            &[style*="background-color: rgb(53, 57, 64)"] {
                background-color: $base !important;
            }
        }
    }
}

div[class^="layerContainer"] {
    > div[class^="layer"] {
        // reaction popout
        div[class^="reactors"] {
            background-color: var(--background-primary);
        }

        div[class^="scroller"] {
            background-color: var(--background-secondary);
        }

        div[class*="reactorDefault"] {
            -webkit-box-shadow: inset 0 -1px 0 var(--background-modifier-accent);
            box-shadow: inset 0 -1px 0 var(--background-modifier-accent);
        }

        div[class*="reactionSelected"] {
            background-color: var(--background-modifier-selected);
        }
    }
}

// gif/sticker/emoji section
section[class^="positionContainer-"] {
    // more transparent to make things more bearable
    [class*="stickerInspected-"] [class^="inspectedIndicator"],
    [class^="emojiItem-"][class*="emojiItemSelected-"] {
        background-color: var(--brand-experiment-50a);
    }
}

.theme-light {
    //   color: $text;

    > div[class^="focusLock"]
        > div[class^="root"]
        > div[class^="container"]
        div[class*="footer"] {
        //     background-color: $mantle;

        &[class*="footerSeparator-"] {
            box-shadow: inset 0 1px 0 $surface0;
            -webkit-box-shadow: inset 0 1px 0 $surface0;
        }
    }

    > div[class^="focusLock"] > div[class^="root"] {
        box-shadow: 0 0 0 1px $surface0,
            0 2px 10px 0
                hsla(0, calc(var(--saturation-factor, 1) * 0%), 0%, 0.1);
        -webkit-box-shadow: 0 0 0 1px $surface0,
            0 2px 10px 0
                hsla(0, calc(var(--saturation-factor, 1) * 0%), 0%, 0.1);
    }
}

div[class^="layerContainer"] {
    // right-click popups for guild, channels, and user
    #guild-header-popout,
    #guild-context,
    div[id^="channel-context"],
    div[id^="user-context"] {
        background: $crust;
    }

    > div[class^="layer"] {
        // search popout
        div[role="listbox"] {
            background-color: $mantle;
        }

        div[class^="focusLock"] {
            // create channel (modal) and stream popout (modalSize)
            div[class^="modal-"],
            div[class^="modalSize-"] {
                background-color: $mantle;
                li,
                p,
                span {
                    color: $text;
                }
            }

            // their respective footers
            div[class*="footer"] {
                background-color: $crust;
            }

            // feature headers
            h1,
            h2,
            h3,
            h4,
            h5,
            h6 {
                &[class^="fixed-"] {
                    &:after {
                        background-color: $red;
                    }
                    color: $red;
                }
            }

            div[class*="message-"] {
                background-color: $surface0;
            }
        }
    }

    // add game
    div[class^="addGamePopout-"] {
        background-color: $mantle;
    }

    div[class*="searchOption-"]::after,
    div[class*="option-"]::after,
    li[class*="option-"]::after {
        display: none;
    }

    div[class^="queryContainer"] {
        background-color: $crust;
        span[class^="key"] {
            color: $text;
            background-color: $base;
        }
    }

    // branded tooltips should have dark text
    [class*="tooltipBrand-"] {
        color: $crust;
    }

    // when hovering active threads
    div[class^="popout-"] div[class^="row"][role="button"] {
        &:hover {
            color: $crust;

            [class*="timestamp"] {
                color: $crust;
            }
        }
    }
}

// add account modal + cards
form[class*="card-"] {
    background-color: $base;
}
